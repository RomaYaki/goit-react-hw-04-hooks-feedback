{"version":3,"sources":["components/Section.js","components/Statistics.js","components/FeedbackOptions.js","components/Notification.js","components/App/App.js","index.js"],"names":["Section","title","children","className","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","item","type","onClick","Notification","message","App","useState","setGood","setNeutral","setBad","option","prevGood","prevNeutral","prevBad","Math","round","ReactDOM","render","document","getElementById"],"mappings":"yMAUeA,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,WAAd,SAA0BF,IACzBC,MCSUE,EAZI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,mCACE,qBAAIN,UAAU,iBAAd,UACE,qBAAIA,UAAU,iBAAd,mBAAsCE,KACtC,qBAAIF,UAAU,iBAAd,sBAAyCG,KACzC,qBAAIH,UAAU,iBAAd,kBAAqCI,EAArC,OACA,yCAAYC,KACZ,qDAAwBC,WCYfC,EAnBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,6BACGD,EAAQE,KAAI,SAAAC,GAAI,OACf,wBAEEC,KAAK,SACLC,QAAS,kBAAMJ,EAAgBE,IAHjC,SAKGA,GAJIA,SCDEG,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,6BAAKA,KCE5B,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOf,EAAP,KAAagB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOd,EAAP,KAAgBgB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOb,EAAP,KAAYgB,EAAZ,KAkBQf,EAAQH,EAAOC,EAAUC,EAK/B,OACE,qCACE,cAAC,EAAD,CAASN,MAAO,wBAAhB,SACE,cAAC,EAAD,CAAiBU,QAAS,CAAC,OAAQ,UAAW,OAAQC,gBAxB3C,SAACY,GAClB,OAAQA,GACN,IAAK,OACHH,GAAQ,SAACI,GAAD,OAAcA,EAAW,KACjC,MACF,IAAK,UACHH,GAAW,SAACI,GAAD,OAAiBA,EAAc,KAC1C,MACF,IAAK,MACHH,GAAO,SAACI,GAAD,OAAaA,EAAU,KAC9B,MACF,QACE,aAcW,IAAVnB,EACC,cAAC,EAAD,CAAcU,QAAQ,sBAEtB,cAAC,EAAD,CAASjB,MAAO,aAAhB,SACI,cAAC,EAAD,CACEI,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAjBCmB,KAAKC,MAAOxB,EAAOG,EAAS,KAiB0B,WCzCvEsB,IAASC,OAAO,cAACZ,EAAD,IAASa,SAASC,eAAe,W","file":"static/js/main.e3b5b5c5.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => (\n  <div className=\"container\">\n    <h2 className=\"feedback\">{title}</h2>\n    {children}\n  </div>\n);\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    <ul className=\"statistic-list\">\n      <li className=\"statistic-item\">Good: {good}</li>\n      <li className=\"statistic-item\">Neutral: {neutral}</li>\n      <li className=\"statistic-item\">Bad: {bad} </li>\n      <li>Total: {total}</li>\n      <li>Positive feedback: {positivePercentage}</li>\n    </ul>\n  </>\n);\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <ul>\n    {options.map(item => (\n      <button\n        key={item}\n        type=\"button\"\n        onClick={() => onLeaveFeedback(item)}\n      >\n        {item}\n      </button>\n    ))}\n  </ul>\n);\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nconst Notification = ({ message }) => <h3>{message}</h3>;\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import {useState} from 'react';\nimport Section from \"../Section\";\nimport Statistics from \"../Statistics\";\nimport FeedbackOptions from \"../FeedbackOptions\";\nimport Notification from \"../Notification\";\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onBtnCLick = (option) => {\n    switch (option) {\n      case \"good\":\n        setGood((prevGood) => prevGood + 1);\n        break;\n      case \"neutral\":\n        setNeutral((prevNeutral) => prevNeutral + 1);\n        break;\n      case \"bad\":\n        setBad((prevBad) => prevBad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n    const total = good + neutral + bad;\n    const countPositiveFeedbackPercentage = () => {\n          return Math.round((good / total) * 100);\n        };\n\n    return (\n      <>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions options={[\"good\", \"neutral\", \"bad\"]} onLeaveFeedback={onBtnCLick} />\n        </Section>\n        {total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Section title={'Statistics'}>\n              <Statistics\n                good={good}\n                neutral={neutral}\n                bad={bad}\n                total={total}\n                positivePercentage={countPositiveFeedbackPercentage() +'%'}\n            />\n          </Section>\n        )}\n      </>\n)}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}